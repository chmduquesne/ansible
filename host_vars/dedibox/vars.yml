---
# No longer Necessary after users/sudo are setup
#ansible_become_user: root
#ansible_become_method: su
#ansible_become_pass: "{{ vault_ansible_become_pass }}"
#ansible_ssh_pass: "{{ vault_ansible_ssh_pass }}"
#ansible_user: "{{ vault_ansible_user }}"

weechat_user: "me"

users:
  - username: "{{ ssh_user }}"
    authorized_keys:
      - "{{ ssh_pubkey_t450 }}"
      - "{{ ssh_pubkey_work }}"
      - "{{ ssh_pubkey_gpg }}"
    home_create: yes
    shell: /bin/bash
  - username: "{{ weechat_user }}"
    authorized_keys:
      - "{{ ssh_pubkey_t450 }}"
      - "{{ ssh_pubkey_work }}"
      - "{{ ssh_pubkey_gpg }}"
    home_create: yes
    shell: /bin/bash
  - username: "restic"
    authorized_keys:
      - "{{ ssh_pubkey_t450 }}"
      - "{{ ssh_pubkey_work }}"
      - "{{ ssh_pubkey_gpg }}"
    home_create: yes
    shell: /bin/bash

ansible_host: "{{ vault_ansible_host }}"

dhclient_config:
 - option rfc3442-classless-static-routes code 121 = array of unsigned integer 8;
 - send host-name = gethostname();
 - |
   request subnet-mask, broadcast-address, time-offset, routers,
           domain-name, domain-name-servers, domain-search, host-name,
           dhcp6.name-servers, dhcp6.domain-search, dhcp6.fqdn, dhcp6.sntp-servers,
           netbios-name-servers, netbios-scope, interface-mtu,
           rfc3442-classless-static-routes, ntp-servers;
 - |
   interface "enp0s20" {
      send dhcp6.client-id {{ vault_dhcp6_clientid }};
   }

network_interfaces_manage_devices: true
network_interfaces_interfaces:
  - device: enp0s20
    family: inet
    method: dhcp
  - device: enp0s20
    family: inet6
    method: dhcp
    request_prefix: 1
    accept_ra: 2

wireguard:
  wg0:
    privkey: "{{ vault_wg0_privkey }}"
    listenport: 500
    unbound_records: True
    dns: False
    peers: "{{ wireguard_global_settings.wg0.peers }}"
    auto_assign_ranges: "{{ wireguard_global_settings.wg0.auto_assign_ranges }}"
    mtu: "{{ wireguard_global_settings.wg0.mtu }}"

wireguard_wg0_dedibox_android:
  pubkey: "{{ wireguard_global_settings.wg0.peers.dedibox.pubkey }}"
  endpoint: "{{ wireguard_global_settings.wg0.peers.dedibox.endpoint }}"
  persistentkeepalive: "{{ wireguard_global_settings.wg0.peers.dedibox.persistentkeepalive }}"
  # everything except local subnetworks
  allowedips:
    - ::/0
    - 10.0.0.0/8
    - 0.0.0.0/5
    - 8.0.0.0/7
    - 11.0.0.0/8
    - 12.0.0.0/6
    - 16.0.0.0/4
    - 32.0.0.0/3
    - 64.0.0.0/2
    - 128.0.0.0/3
    - 160.0.0.0/5
    - 168.0.0.0/6
    - 172.0.0.0/12
    - 172.32.0.0/11
    - 172.64.0.0/10
    - 172.128.0.0/9
    - 173.0.0.0/8
    - 174.0.0.0/7
    - 176.0.0.0/4
    - 192.0.0.0/9
    - 192.128.0.0/11
    - 192.160.0.0/13
    - 192.169.0.0/16
    - 192.170.0.0/15
    - 192.172.0.0/14
    - 192.176.0.0/12
    - 192.192.0.0/10
    - 193.0.0.0/8
    - 194.0.0.0/7
    - 196.0.0.0/6
    - 200.0.0.0/5
    - 208.0.0.0/4

wireguard_mobile:
  wg0:
    t450:
      privkey: "{{ vault_wg0_t450_privkey }}"
      dns: "{{ wireguard_global_settings.wg0.dns }}"
      peers:
        dedibox: "{{ wireguard_global_settings.wg0.peers.dedibox }}"
      auto_assign_ranges: "{{ wireguard_global_settings.wg0.auto_assign_ranges }}"
    op3t:
      privkey: "{{ vault_wg0_op3t_privkey }}"
      dns: "{{ wireguard_global_settings.wg0.dns }}"
      peers:
        dedibox: "{{ wireguard_wg0_dedibox_android }}"
      auto_assign_ranges: "{{ wireguard_global_settings.wg0.auto_assign_ranges }}"
    op8t:
      privkey: "{{ vault_wg0_op8t_privkey }}"
      dns: "{{ wireguard_global_settings.wg0.dns }}"
      peers:
        dedibox: "{{ wireguard_wg0_dedibox_android }}"
      auto_assign_ranges: "{{ wireguard_global_settings.wg0.auto_assign_ranges }}"
    firetv:
      privkey: "{{ vault_wg0_firetv_privkey }}"
      dns: "{{ wireguard_global_settings.wg0.dns }}"
      peers:
        dedibox: "{{ wireguard_wg0_dedibox_android }}"
      auto_assign_ranges: "{{ wireguard_global_settings.wg0.auto_assign_ranges }}"

nftables_includes:
  wireguard_dns:
    - |
      add rule inet filter input iifname "wg0" tcp dport 53 accept comment "dns wg0"
      add rule inet filter input iifname "wg0" udp dport 53 accept comment "dns wg0"
  haproxy:
    - |
      add rule inet filter input tcp dport 80 accept comment "http"
      add rule inet filter input tcp dport 443 accept comment "https"
  mosh:
    - |
      add rule inet filter input udp dport 60000-61000 accept comment "mosh"
  wireguard:
    - |
      add rule inet filter input udp dport {{ wireguard.wg0.listenport }} accept comment "wireguard protocol"
      add rule inet filter forward ct state {established, related} accept comment "already open connections"
      add rule inet filter forward iifname "wg0" oifname "enp0s20" accept comment "wg0 to enp0s20"
      add rule inet filter forward iifname "wg0" oifname "wg0" accept comment "within wg0"
  masquerade:
    - |
      table ip nat {
          chain postrouting {
              type nat hook postrouting priority 100 ; policy accept;
              oifname "enp0s20" masquerade comment "masquerade enp0s20"
              counter comment "count accepted packets"
          }
      }

unbound_unbound_conf:
  - |
    server:
      interface: ::0
      max-udp-size: 3072
      access-control: ::0/0 refuse
      access-control: ::1 allow
      access-control: {{ wireguard.wg0.auto_assign_ranges.0 }} allow
      access-control: {{ wireguard.wg0.auto_assign_ranges.1 }} allow
      harden-referral-path: yes
      unwanted-reply-threshold: 10000000
      val-permissive-mode: yes
      val-log-level: 1
      prefetch-key: yes
      cache-min-ttl: 1800
      cache-max-ttl: 14400
      prefetch: yes
      include: /etc/unbound/records.d/*.conf

letsencrypt_etc_certbot_ovh_ini: "{{ vault_letsencrypt_etc_certbot_ovh_ini }}"

haproxy_conf:
  - |
    global
        log /dev/log    local0
        log /dev/log    local1 notice
        chroot /var/lib/haproxy
        stats socket /run/haproxy/admin.sock mode 660 level admin
        stats timeout 30s
        user haproxy
        group haproxy
        daemon
        # Default SSL material locations
        ca-base /etc/ssl/certs
        crt-base /etc/ssl/private
        # Default ciphers to use on SSL-enabled listening sockets.
        # For more information, see ciphers(1SSL). This list is from:
        #  https://hynek.me/articles/hardening-your-web-servers-ssl-ciphers/
        # An alternative list with additional directives can be obtained from
        #  https://mozilla.github.io/server-side-tls/ssl-config-generator/?server=haproxy
        ssl-default-bind-ciphers ECDH+AESGCM:DH+AESGCM:ECDH+AES256:DH+AES256:ECDH+AES128:DH+AES:RSA+AESGCM:RSA+AES:!aNULL:!MD5:!DSS
        ssl-default-bind-options no-sslv3 no-tls-tickets

    defaults
        log     global
        mode    http
        option  httplog
        option  dontlognull
        timeout connect 5000
        timeout client  5000000
        timeout server  5000000
        errorfile 400 /etc/haproxy/errors/400.http
        errorfile 403 /etc/haproxy/errors/403.http
        errorfile 408 /etc/haproxy/errors/408.http
        errorfile 500 /etc/haproxy/errors/500.http
        errorfile 502 /etc/haproxy/errors/502.http
        errorfile 503 /etc/haproxy/errors/503.http
        errorfile 504 /etc/haproxy/errors/504.http
        unique-id-format %{+X}o\ %Ts:%rt
        unique-id-header X-Unique-ID

    backend redir-https
        http-request redirect scheme https

    backend resume
        server resume0 chmduquesne.github.io:443 ssl verify none
        reqrep ^([^\ :]*)\ /(.*)     \1\ /resume.chmd.fr/\2
        reqrep ^Host:\ (.*)   Host:\ chmduquesne.github.io

    backend blog
        server blog0 chmduquesne.github.io:443 ssl verify none
        reqrep ^([^\ :]*)\ /(.*)     \1\ /blog.chmd.fr/\2
        reqrep ^Host:\ (.*)   Host:\ chmduquesne.github.io

    backend chmd
        server chmd0 chmduquesne.github.io:443 ssl verify none
        reqrep ^([^\ :]*)\ /(.*)     \1\ /chmd.fr/\2
        reqrep ^Host:\ (.*)   Host:\ chmduquesne.github.io

    backend weechat
        mode tcp
        option tcplog
        server weechat0 127.0.0.1:9000

    backend ssh
        mode tcp
        option tcplog
        server ssh0 127.0.0.1:22
        timeout server 2h

    frontend http
        bind :::80
        bind :80
        use_backend redir-https

    frontend https
        bind :::443 ssl crt /etc/letsencrypt/live/chmd.fr/combined.pem
        bind :443 ssl crt /etc/letsencrypt/live/chmd.fr/combined.pem
        #capture request header Host len 32
        log-format "[%ID] %ci:%cp [%tr] %ft %b/%s %TR/%Tw/%Tc/%Tr/%Ta %ST %B %CC %CS %tsc %ac/%fc/%bc/%sc/%rc %sq/%bq %hr %hs %{+Q}r"
        use_backend resume if { req.hdr(Host) -i -m str resume.chmd.fr }
        use_backend blog   if { req.hdr(Host) -i -m str blog.chmd.fr }
        use_backend chmd

    frontend ssl
        bind :::443 ssl crt /etc/letsencrypt/live/chmd.fr/combined.pem
        bind :443 ssl crt /etc/letsencrypt/live/chmd.fr/combined.pem
        mode tcp
        option tcplog
        tcp-request inspect-delay 30s
        tcp-request content reject if HTTP
        use_backend ssh if { payload(0,7) -m bin 5353482d322e30 }
        use_backend weechat if { ssl_fc_sni_reg weechat.chmd.fr }
        use_backend ssh if !HTTP

weechat:
  - user: "{{ weechat_user }}"
    init:
      - /server add libera irc.libera.chat/6697 -ssl
      - /set irc.server.libera.nicks "{{ vault_weechat_libera_nicks }}"
      - /set irc.server.libera.username {{ vault_weechat_libera_username }}
      - /set irc.server.libera.realname "{{ vault_weechat_libera_realname }}"
      - /set irc.server.libera.autoconnect on
      - /set irc.server.libera.sasl_username {{ vault_weechat_libera_username }}
      - /secure set libera_password {{ vault_weechat_libera_password }}
      - /set irc.server.libera.sasl_password "${sec.data.libera_password}"
      - /set irc.server.libera.autojoin "{{ vault_weechat_libera_autojoin }}"
      - /secure set relay {{ vault_weechat_relay_password }}
      - /set relay.network.password "${sec.data.relay}"
      - /relay add weechat 9000
    tmuxautostart: true

host_roles:
  - common
  - reallyenglish.dhclient
  - chmduquesne.network_interfaces
  - chmduquesne.gateway
  - chmduquesne.wireguard
  - unbound
  - letsencrypt
  - chmduquesne.haproxy
  - mosh
  - weechat
