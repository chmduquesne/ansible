---
# No longer Necessary after users/sudo are setup
#ansible_become_user: root
#ansible_become_method: su
#ansible_become_pass: "{{ vault_ansible_become_pass }}"
#ansible_ssh_pass: "{{ vault_ansible_ssh_pass }}"
#ansible_user: "{{ vault_ansible_user }}"

irssi_user: "me"

users:
  - username: "{{ ssh_user }}"
    authorized_keys:
      - "{{ ssh_pubkey_t450 }}"
      - "{{ ssh_pubkey_work }}"
      - "{{ ssh_pubkey_gpg }}"
    home_create: yes
    shell: /bin/bash
  - username: "{{ irssi_user }}"
    authorized_keys:
      - "{{ ssh_pubkey_t450 }}"
      - "{{ ssh_pubkey_work }}"
      - "{{ ssh_pubkey_gpg }}"
    home_create: yes
    shell: /bin/bash
  - username: "restic"
    authorized_keys:
      - "{{ ssh_pubkey_t450 }}"
      - "{{ ssh_pubkey_work }}"
      - "{{ ssh_pubkey_gpg }}"
    home_create: yes
    shell: /bin/bash

ansible_host: "{{ vault_ansible_host }}"

dhclient_config:
 - option rfc3442-classless-static-routes code 121 = array of unsigned integer 8;
 - send host-name = gethostname();
 - |
   request subnet-mask, broadcast-address, time-offset, routers,
           domain-name, domain-name-servers, domain-search, host-name,
           dhcp6.name-servers, dhcp6.domain-search, dhcp6.fqdn, dhcp6.sntp-servers,
           netbios-name-servers, netbios-scope, interface-mtu,
           rfc3442-classless-static-routes, ntp-servers;
 - |
   interface "enp0s20" {
      send dhcp6.client-id {{ vault_dhcp6_clientid }};
   }

network_interfaces_manage_devices: true
network_interfaces_interfaces:
  - device: enp0s20
    family: inet
    method: dhcp
  - device: enp0s20
    family: inet6
    method: dhcp
    request_prefix: 1
    accept_ra: 2

wireguard_override:
  wg0:
    privkey: "{{ vault_wg0_privkey }}"
    listenport: 500
    out_gw: enp0s20
    unbound_records: True
    dns: False

wireguard: "{{ wireguard_default|combine(wireguard_override, recursive=True) }}"

wireguard_generate_mobile: true
wireguard_mobile_conf_dir: "wg_configs"
wireguard_mobile_parameters:
  wg0:
    dns: "{{ wireguard_default.wg0.dns }}"

iptables_custom_rules:
  - name: "wg0_dns"
    rules: |
      -A INPUT -i wg0 -p tcp -m tcp --dport 53 -m conntrack --ctstate NEW -j ACCEPT
      -A INPUT -i wg0 -p udp -m udp --dport 53 -m conntrack --ctstate NEW -j ACCEPT
  - name: "haproxy"
    rules: |
      -A INPUT -p tcp -m tcp --dport 80 -m conntrack --ctstate NEW -j ACCEPT
      -A INPUT -p tcp -m tcp --dport 443 -m conntrack --ctstate NEW -j ACCEPT

ip6tables_custom_rules: "{{ iptables_custom_rules }}"

unbound_unbound_conf:
  - |
    server:
      interface: ::0
      max-udp-size: 3072
      access-control: ::0/0 refuse
      access-control: ::1 allow
      access-control: {{ wireguard.wg0.auto_assign_ips.0 }} allow
      access-control: {{ wireguard.wg0.auto_assign_ips.1 }} allow
      harden-referral-path: yes
      unwanted-reply-threshold: 10000000
      val-permissive-mode: yes
      val-log-level: 1
      prefetch-key: yes
      cache-min-ttl: 1800
      cache-max-ttl: 14400
      prefetch: yes
      include: /etc/unbound/records.d/*.conf

letsencrypt_etc_certbot_ovh_ini: "{{ vault_letsencrypt_etc_certbot_ovh_ini }}"

haproxy_conf:
  - |
    global
        log /dev/log    local0
        log /dev/log    local1 notice
        chroot /var/lib/haproxy
        stats socket /run/haproxy/admin.sock mode 660 level admin
        stats timeout 30s
        user haproxy
        group haproxy
        daemon
        # Default SSL material locations
        ca-base /etc/ssl/certs
        crt-base /etc/ssl/private
        # Default ciphers to use on SSL-enabled listening sockets.
        # For more information, see ciphers(1SSL). This list is from:
        #  https://hynek.me/articles/hardening-your-web-servers-ssl-ciphers/
        # An alternative list with additional directives can be obtained from
        #  https://mozilla.github.io/server-side-tls/ssl-config-generator/?server=haproxy
        ssl-default-bind-ciphers ECDH+AESGCM:DH+AESGCM:ECDH+AES256:DH+AES256:ECDH+AES128:DH+AES:RSA+AESGCM:RSA+AES:!aNULL:!MD5:!DSS
        ssl-default-bind-options no-sslv3 no-tls-tickets

    defaults
        log     global
        mode    http
        option  httplog
        option  dontlognull
        timeout connect 5000
        timeout client  5000000
        timeout server  5000000
        errorfile 400 /etc/haproxy/errors/400.http
        errorfile 403 /etc/haproxy/errors/403.http
        errorfile 408 /etc/haproxy/errors/408.http
        errorfile 500 /etc/haproxy/errors/500.http
        errorfile 502 /etc/haproxy/errors/502.http
        errorfile 503 /etc/haproxy/errors/503.http
        errorfile 504 /etc/haproxy/errors/504.http
        unique-id-format %{+X}o\ %Ts:%rt
        unique-id-header X-Unique-ID

    backend redir-https
        http-request redirect scheme https

    backend resume
        server resume0 chmduquesne.github.io:443 ssl verify none
        reqrep ^([^\ :]*)\ /(.*)     \1\ /resume.chmd.fr/\2
        reqrep ^Host:\ (.*)   Host:\ chmduquesne.github.io

    backend blog
        server blog0 chmduquesne.github.io:443 ssl verify none
        reqrep ^([^\ :]*)\ /(.*)     \1\ /blog.chmd.fr/\2
        reqrep ^Host:\ (.*)   Host:\ chmduquesne.github.io

    backend chmd
        server chmd0 chmduquesne.github.io:443 ssl verify none
        reqrep ^([^\ :]*)\ /(.*)     \1\ /chmd.fr/\2
        reqrep ^Host:\ (.*)   Host:\ chmduquesne.github.io

    backend ssh
        mode tcp
        option tcplog
        server ssh0 127.0.0.1:22
        timeout server 2h

    frontend http
        bind :::80
        bind :80
        use_backend redir-https

    frontend https
        bind :::443 ssl crt /etc/letsencrypt/live/chmd.fr/combined.pem
        bind :443 ssl crt /etc/letsencrypt/live/chmd.fr/combined.pem
        #capture request header Host len 32
        log-format "[%ID] %ci:%cp [%tr] %ft %b/%s %TR/%Tw/%Tc/%Tr/%Ta %ST %B %CC %CS %tsc %ac/%fc/%bc/%sc/%rc %sq/%bq %hr %hs %{+Q}r"
        use_backend resume if { req.hdr(Host) -i -m str resume.chmd.fr }
        use_backend blog   if { req.hdr(Host) -i -m str blog.chmd.fr }
        use_backend chmd

    frontend ssl
        bind :::443 ssl crt /etc/letsencrypt/live/chmd.fr/combined.pem
        bind :443 ssl crt /etc/letsencrypt/live/chmd.fr/combined.pem
        mode tcp
        option tcplog
        tcp-request inspect-delay 30s
        tcp-request content reject if HTTP
        use_backend ssh if { payload(0,7) -m bin 5353482d322e30 }
        use_backend ssh if !HTTP

host_roles:
  - common
  - reallyenglish.dhclient
  - chmduquesne.network_interfaces
  - chmduquesne.wireguard
  - unbound
  - letsencrypt
  - chmduquesne.haproxy
  - irssi
