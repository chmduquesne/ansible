---

- set_fact:
    peers: []

- name: collect peers
  set_fact:
    peers: "{{ peers }} + [ item ]"
  with_inventory_hostnames:
    all
  when:
    - item != inventory_hostname
    - hostvars[item].wireguard is defined
    - wgnet in hostvars[item].wireguard

- set_fact:
    peers: "{{ peers | sort }}"

- set_fact:
    conf: "{{ wireguard[wgnet] }}"

- name: collect wg-ip generated ipv6 addresses
  command: wg-ip -6 gen {{ hostvars[item].wireguard[wgnet].pubkey }}
  register:  wgip_gen_inet6
  with_items:
    "{{ peers }}"
  changed_when: false
  check_mode: no

- set_fact:
    inet6_auto_addr: {}

- name: collect inet6 auto addresses
  set_fact:
    inet6_auto_addr: "{{ inet6_auto_addr | combine({item['item']: item['stdout']}) }}"
  with_items:
    "{{ wgip_gen_inet6.results }}"

- name: collect the address of the outgoing gateway
  set_fact: {"wireguard_upstream_dns": "{{ inet6_auto_addr[item] }}"}
  with_items:
    "{{ peers }}"
  when:
    - hostvars[item].wireguard[wgnet].out_gw is defined

- name: create config file
  template:
    src: templates/etc/wireguard/wgnet.conf.j2
    dest: "/etc/wireguard/{{ wgnet }}.conf"
    owner: root
    group: root
    mode: 0600

- name: collect routing mode 1/3
  set_fact:
    mode: "client"

- name: collect routing mode 2/3
  set_fact:
    mode: "out_gw"
  when:
    - conf.out_gw is defined

- name: collect routing mode 3/3
  set_fact:
    mode: "in_gw"
  when:
    - conf.in_gw is defined

- name: configure interface
  include_tasks: configure_interface.yml

- name: configure firewall
  include_tasks: "configure_firewall_{{ mode }}.yml"
